// <auto-generated />
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniUrl.KeyManager.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MiniUrl.KeyManager.Infrastructure.Migrations
{
    [DbContext(typeof(KeyManagerContext))]
    partial class KeyManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MiniUrl.KeyManager.Domain.Models.Configuration", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<JsonDocument>("Value")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Key");

                    b.ToTable("Configuration");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Configuration");
                });

            modelBuilder.Entity("MiniUrl.KeyManager.Domain.Models.Key", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte>("State")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("MiniUrl.KeyManager.Domain.Models.KeyManagerConfiguration", b =>
                {
                    b.HasBaseType("MiniUrl.KeyManager.Domain.Models.Configuration");

                    b.ToTable("Configuration");

                    b.HasDiscriminator().HasValue("KeyManagerConfiguration");
                });
#pragma warning restore 612, 618
        }
    }
}
